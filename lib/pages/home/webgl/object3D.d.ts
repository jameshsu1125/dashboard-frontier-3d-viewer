import { TModelProps, TSlider } from '../../../settings/type';
import { THREE } from 'lesca-webgl-threejs';
import { TWebGLProps } from '../webgl';

export default class Object3D {
    private scene;
    private mesh;
    private meshBackSide;
    private material;
    private materialBackSide;
    private options;
    private axis;
    private width;
    private height;
    private downscaleWidth;
    private anisotropy;
    private ground;
    private defaultColor;
    constructor(scene: THREE.Scene, options: TWebGLProps);
    private addGround;
    addModel(mesh: THREE.Group): void;
    updateModel(model: THREE.Group | THREE.Mesh, options: TModelProps): void;
    private removeModel;
    addMaterial(map: THREE.Texture): void;
    updateMaterial(data: TSlider[]): void;
    addAlphaMap(map: THREE.Texture): void;
    removeAlphaMap(): void;
    addBumpMap(map: THREE.Texture, scale?: number): void;
    removeBumpMap(): void;
    updateBumpScale(scale: number): void;
    addRoughnessMap(map: THREE.Texture): void;
    removeRoughnessMap(): void;
    addDisplacementMap(map: THREE.Texture): void;
    removeDisplacementMap(): void;
    addNormalMap(map: THREE.Texture, scale: number): void;
    removeNormalMap(): void;
    updateDefaultColor(color: string): void;
    updateColor(color: string): void;
    updateTemperature(temperature: number): void;
    updateMapScale(scale: number): void;
    updateDefaultMapScale(scale: number): void;
    updateNormalScale(scale: number): void;
    private getRepeatMapByDpi;
    setTexture(texture: THREE.Texture, isSRGB?: boolean): void;
    setSize(width: number, height: number): void;
    setDownscaleWidth(width: number): void;
    setAnisotropy(anisotropy?: number): void;
    setGroundShadowByType(type: 'image' | 'model'): void;
    private rerender;
}
